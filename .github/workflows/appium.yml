
name: Mobile-Tesing-CI

on:
  push:
    branches: [ feature-mobile ]
  pull_request:
    branches: [ feature-mobile ]
  workflow_dispatch:

jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: macOS-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      # Setup Node JS - 14.15.0
      - name: Set up Node JS 10.17.0
        uses: actions/setup-node@v1
        with:
          node-version: '14.15.0'
      # Clean Packages & Install Dependencies 
      - name: Clean Packages 
        run: |
          rm -rf node_modules
          npm cache clean --force
          rm -rf package-lock.json
      # Install React Native CLI
      - name: Install React Native CLI
        run: |
          npm install react-native-cli
      # Run Android Emulator
      - name: Run Android Emulator
        run: |
          echo "y" | $ANDROID_HOME/tools/bin/sdkmanager --install 'system-images;android-28;google_apis;x86_64'
          echo "no" | $ANDROID_HOME/tools/bin/avdmanager create avd -n test_device -k 'system-images;android-28;google_apis;x86_64' --force
          echo $ANDROID_HOME/emulator/emulator -list-avds
          echo "Starting emulator"
          nohup $ANDROID_HOME/emulator/emulator -avd test_device -no-snapshot > /dev/null 2>&1 &
          $ANDROID_HOME/platform-tools/adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed | tr -d '\r') ]]; do sleep 1; done; input keyevent 82'
          $ANDROID_HOME/platform-tools/adb devices
          echo "Emulator started"
      # Use HTTPS repo
      # Install Repo and Dependencies
      - name: Install Repo and Dependencies
        run: |
          npm install -g appium
      # Start the Appium Server
      - name: Start the Appium Server
        run: ./node_modules/.bin/appium --log-timestamp --log-no-colors --allow-insecure chromedriver_autodownload > appium.log &
      # Poll for Appium Server to Start
      - name: Poll for Appium Server to Start
        run: |
          until $(curl --output /dev/null --silent --head --fail http://127.0.0.1:4723/wd/hub/sessions); do
            sleep 5
          done
      # Build Android App and Run Tests
      - name: Build Android App and Run Tests
        env:
          E2E_TEST_PLATFORM: 'android'
          E2E_TEST_DEFAULTS: 'true'
          E2E_TEST_TAGS: 'E2E'
        run: |
          react-native run-android
          sleep 15
          mvn clean test -Pandroid -X
      # Upload Appium Logs
      - name: Upload Appium logs
        uses: actions/upload-artifact@v1
        with:
          name: appium.log
          path: appium.log
      # Upload Test Results
      - name: Upload Test Results
        uses: actions/upload-artifact@v1
        with:
          name: e2e-results
          path: __tests__/e2e/output
